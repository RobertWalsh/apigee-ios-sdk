# Configuration file for HeaderDoc
# $Revision: 1.7 $
###########################################################

# These options set various parameters used in content generation.
copyrightOwner =>
defaultFrameName => index.html
masterTOCName => index.html

# This controls the unique ID prefix used at the start of API references.
# Use this to control the API UID of generated refs.  If you need to
# support linking to documents with multiple API UID prefixes, define
# the externalAPIUIDPrefixes variable with a space-separaed list of
# valid prefixes.
apiUIDPrefix => apple_ref

# This is a legacy way of ignoring junk at the start of a line.
# The current preferred mechanism is to define it out of existence
# with C preprocessor macros.
ignorePrefixes =>

# To include information at the top or bottom of every page,
# either include a string in htmlHeader/htmlFooter or a filename
# in htmlHeaderFile or htmlFooterFile
htmlHeader => 
htmlHeaderFile => source/Scripts/ref_header.html
htmlFooter => <p>&copy; 2014 Apigee Corp. All rights reserved</p>
htmlFooterFile =>

# Tells HeaderDoc to suppress the default <style> content in a couple of places.
suppressDefaultStyles => 0

# Tells HeaderDoc to not include JavaScript bits used for the table of contents and
# linking support.  Normally, you would only set this to 1 if you intend to replace
# those scripts with a single, site-wide copy to reduce bandwidth.
suppressDefaultJavaScript => 0

# Sets the format of the table of contents.
TOCFormat => default

# Tells HeaderDoc to strip the .h off of the ends of header names in the
# master TOC generated by gatherHeaderDoc.
stripDotH => 1

# The TOC template file list can contain multiple template files, separated by spaces, e.g.
# TOCTemplateFile => toctemplate.html functions.tmpl constants.tmpl datatypes.tmpl mpindex.tmpl

TOCTemplateFile => /Users/ApigeeCorporation/Documents/workfiles/github/apigee-ios-sdk-straut/source/Scripts/apigee_toc_template.html

# You can include additional stylesheet bits with any of the following:
externalStyleSheets => http://sdk.apigee.com/docs/reference/sdk/css/apigee_rdk.css http://sdk.apigee.com/docs/reference/sdk/css/apigee_wwm.css http://sdk.apigee.com/docs/reference/sdk/css/menu.css http://sdk.apigee.com/docs/reference/sdk/css/ios_stylesheet.css
externalTOCStyleSheets => http://sdk.apigee.com/docs/reference/sdk/css/apigee_rdk.css http://sdk.apigee.com/docs/reference/sdk/css/apigee_wwm.css http://sdk.apigee.com/docs/reference/sdk/css/menu.css http://sdk.apigee.com/docs/reference/sdk/css/ios_stylesheet.css

# These are CSS Styles for various bits of code declarations.
textStyle =>
commentStyle => background:#ffffff; color:#236e25
preprocessorStyle => background:#ffffff; color:#236e25
funcNameStyle => background:#ffffff; color:#000000;
stringStyle => background: #ffffff; color:#891315;
charStyle => background: #ffffff; color:#0000ff;
numberStyle => background: #ffffff; color:#0000ff;
keywordStyle => background:#ffffff; color:#761550;
typeStyle => background:#ffffff; color:#761550;
paramStyle => background:#ffffff; color:#000000;
varStyle => background:#ffffff; color:#000000;
templateStyle => background:#ffffff; color:#761550;

# These control the automatic generation of hierarchical jump links in large
# index pages.  You can set these limits higher or lower as desired.
groupHierLimit => 100
groupHierSubgroupLimit => 30

# To use a different C compiler other than GCC for calculating values
# of #define macro chains, specify the alternative compiler here.
cCompiler => /usr/bin/gcc

# HeaderDoc converts unknown HTML tags into text as part of its
# input sanitization process.  If you are using any custom HTML tags
# beyond the allowed set, list them them here (in a space-separated list).
customTags => 